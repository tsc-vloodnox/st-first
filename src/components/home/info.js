import React, { useEffect, useState } from "react";
import Dots from "./Dots";
import Arrows from "./Arrows";

const sliderContent = [
  {
    id: 1,
    title: "A l'odre du jour",
    description:
      "‚Ä¢ Remerciement ‚Ä¢ Pr√©sentation du bureau ‚Ä¢ Apport √† l'avancement de la Structure ‚Ä¢ Insertion des 2e Ann√©es dans le bureau et dans les activit√©s de la structures ‚Ä¢ Cotisation Annuel",
  },
  {
    id: 2,
    title: "Remerciement",
    description:
      "Le Pr√©sident et son bureau tiennent √† remercier tout le monde pour avoir accompagn√© cette vision commune qu'est la Structure. En effet la cr√©ation de notre structure n'a pas √©t√© facile. Au d√©but avec un petit nombre, nous avons commenc√© mais aujourd'hui l'apport de tous et des 1ere ann√©es a vraiment port√©. üôè",
  },
  {
    id: 3,
    title: "Pr√©sentation du Bureau",
    description:
      "Lorem ipsum dolor sit amet consectetur adipisicing elit. Distinctio dolor accusantium sint expedita ipsa! Dicta deleniti odit, dignissimos vero quae numquam nesciunt esse excepturi ducimus quos, harum fugit debitis voluptates.",
  },
  {
    id: 4,
    title: "Apport √† l'avancement",
    description:
      "Nous avons une innovation en cours propos√©e par un membre de la structure. @The_Shadow nous propose un site internet pour la structure avec une banque d'infos et tout savoir sur la Structure. *Nous rappelons que nous sommes ouverts √† toutes vos propositions pour l'avanc√©e de la structure*",
  },
  {
    id: 5,
    title: "Insertion des 2e Ann√©e",
    description:
      "Le pr√©sident informe que dans le bureau de la Structure, il n'y aura pas que des 3e Ann√©e. Ce sera un m√©lange de 2e et de 3e ann√©e. Alors nous attendons toujours les candidatures pour tous ceux qui veulent adh√©rer au bureau et faire part leurs id√©es. Apr√®s cela, nous vous ferons une liste d√©finitive des membres du bureau.",
  },
];
const len = sliderContent.length - 1;

function Info() {
  const [activeIndex, setActiveIndex] = useState(0);
  useEffect(() => {
    const interval = setInterval(() => {
      setActiveIndex(activeIndex === len ? 0 : activeIndex + 1);
    }, 8000);
    return () => clearInterval(interval);
  }, [activeIndex]);

  return (
    <ul className="all-info-list">
      <li className="itm info-type-slide">
        <div className="slider-container">
          <section
            className="ss"
            activeIndex={activeIndex}
            sliderContent={sliderContent}
          >
            <h1 className="slide-title">CR r√©union 00/00/00</h1>
            {sliderContent.map((slide, index) => (
              <div
                key={index}
                className={index === activeIndex ? "slides active" : "inactive"}
              >
                <h2 className="slide-sub-title">{slide.title}</h2>
                <p className="slide-text">{slide.description}</p>
              </div>
            ))}
          </section>

          {/* -----------------------INDICATEUR-------------------- */}
          <Dots
            className="all-dots"
            activeIndex={activeIndex}
            sliderContent={sliderContent}
            onclick={(activeIndex) => setActiveIndex(activeIndex)}
          />

          {/* -----------------------ARROWS---------------------- */}
          <Arrows
            prevSlide={() =>
              setActiveIndex(activeIndex < 1 ? len : activeIndex - 1)
            }
            nextSlide={() =>
              setActiveIndex(activeIndex === len ? 0 : activeIndex + 1)
            }
          />
        </div>
      </li>
      <li className="itm size-info">
        <div>
          <h2 className="info-title ">Lorem</h2>
          <p className="info-content">Shadow viens en janvier lol!</p>
        </div>
      </li>
    </ul>
  );
}

export default Info;
